autoplot(naive(goog2))
naive(goog2, bootstrap=TRUE)
pl <-list()
pl[[1]] <- autoplot(goog1, main = "(a)", xlab = "Day")
pl[[2]] <- autoplot(diff(goog1), main = "(b)", xlab = "Day")
p1 <- ggAcf(goog1)
p2 <- ggAcf(diff(goog1))
gridExtra::grid.arrange(p1,p2, nrow=1)
Box.test(diff(goog1), lag=10, type="Ljung-Box")
pv <- Box.test(diff(goog1), lag=10, type="Ljung-Box")$p.value
# Use the last 280 obs of goog
# The reason is that anymore in the training set goog2
# we get a sign spike in the ACF at lag 3 which
# I think is too confusing to explain so early on - or maybe
# it is a good thing?? What do you think?
goog1 <- ts(subset(goog,start=(length(goog)-350)))
ggAcf(goog1)
ggAcf(diff(goog1))
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-280)))
goog2 <- subset(goog1, end = 240)
smallfonts <- theme(text = element_text(size = 9),
axis.text = element_text(size=8))
p1 <- autoplot(hsales) + smallfonts +
xlab("Year") + ylab("millions") +
ggtitle("Sales of new one-family houses, USA")
p2 <- autoplot(ustreas) + smallfonts +
xlab("Day") + ylab("Number") +
ggtitle("US treasury bill contracts")
p3 <- autoplot(qauselec) + smallfonts +
xlab("Year") + ylab("billion kWh") +
ggtitle("Australian quarterly electricity production")
p4 <- autoplot(diff(goog1)) + smallfonts +
xlab("Day") + ylab("Change in prices") +
ggtitle("Google Inc closing stock price")
gridExtra::grid.arrange(p1,p2,p3,p4,ncol=2)
autoplot(goog1)
autoplot(goog2) +
forecast::autolayer(meanf(goog2, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog2, h=40), PI=FALSE, series="NaÃ¯ve") +
forecast::autolayer(rwf(goog2, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
xlab("Day") + ylab("") +
guides(colour=guide_legend(title="Forecast"))
goog2 <- window(goog1, end=240)
autoplot(goog2) + xlab("Day") + ylab("") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)")
res <- residuals(naive(goog2))
autoplot(res) + xlab("Day") + ylab("") +
ggtitle("Residuals from naÃ¯ve method")
gghistogram(res) + ggtitle("Histogram of residuals")
ggAcf(res) + ggtitle("ACF of residuals")
Box.test(res, lag=10, fitdf=0)
Box.test(res,lag=10, fitdf=0, type="Lj")
checkresiduals(naive(goog2))
goog2 <- window(goog1, end=240)
googfc1 <- meanf(goog2, h=40)
googfc2 <- rwf(goog2, h=40)
googfc3 <- rwf(goog2, drift=TRUE, h=40)
autoplot(goog1) +
forecast::autolayer(googfc1, PI=FALSE, series="Mean") +
forecast::autolayer(googfc2, PI=FALSE, series="NaÃ¯ve") +
forecast::autolayer(googfc3, PI=FALSE, series="Drift") +
xlab("Day") + ylab("") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
guides(colour=guide_legend(title="Forecast"))
goog3 <- window(goog1, start=241)
accuracy(googfc1, goog3)
accuracy(googfc2, goog3)
accuracy(googfc3, goog3)
e <- tsCV(goog1, rwf, drift=TRUE, h=1)
sqrt(mean(e^2, na.rm=TRUE))
sqrt(mean(residuals(rwf(goog1, drift=TRUE))^2, na.rm=TRUE))
goog1 %>% tsCV(forecastfunction=rwf, drift=TRUE, h=1) -> e
e^2 %>% mean(na.rm=TRUE) %>% sqrt()
goog1 %>% rwf(drift=TRUE) %>% residuals() -> res
res^2 %>% mean(na.rm=TRUE) %>% sqrt()
e <- matrix(NA_real_, nrow = length(goog1), ncol = 8)
for (h in seq_len(8))
e[, h] <- tsCV(goog1, forecastfunction = naive, h = h)
# Compute the MSE values and remove missing values
mse <- colMeans(e^2, na.rm = T)
# Plot the MSE values against the forecast horizon
data.frame(h = 1:8, MSE = mse) %>%
ggplot(aes(x = h, y = MSE)) + geom_point()
naive(goog2)
autoplot(naive(goog2))
naive(goog2, bootstrap=TRUE)
pl <-list()
pl[[1]] <- autoplot(goog1, main = "(a)", xlab = "Day")
pl[[2]] <- autoplot(diff(goog1), main = "(b)", xlab = "Day")
p1 <- ggAcf(goog1)
p2 <- ggAcf(diff(goog1))
gridExtra::grid.arrange(p1,p2, nrow=1)
Box.test(diff(goog1), lag=10, type="Ljung-Box")
pv <- Box.test(diff(goog1), lag=10, type="Ljung-Box")$p.value
library("latex2exp")
plot(cars$speed,cars$speed,xlab="x",ylab=latex2exp("$y_{123}$"))
library("latex2exp")
plot(cars$speed,cars$speed,xlab="x",ylab=TeX("$y_{123}$"))
install.packages("yaml")
install.packages("curl")
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-200)))
library("fpp2", lib.loc="C:/Program Files/R/R-3.4.3/library")
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-200)))
autoplot(goog1)
autoplot(goog200)
p4 <- autoplot(diff(goog200)) + smallfonts +
xlab("Day") + ylab("Change in prices") +
ggtitle("Google Inc closing stock price")
gridExtra::grid.arrange(p1,p2,p3,p4,ncol=2)
smallfonts <- theme(text = element_text(size = 9),
axis.text = element_text(size=8))
p1 <- autoplot(hsales) + smallfonts +
xlab("Year") + ylab("millions") +
ggtitle("Sales of new one-family houses, USA")
p2 <- autoplot(ustreas) + smallfonts +
xlab("Day") + ylab("Number") +
ggtitle("US treasury bill contracts")
p3 <- autoplot(qauselec) + smallfonts +
xlab("Year") + ylab("billion kWh") +
ggtitle("Australian quarterly electricity production")
p4 <- autoplot(diff(goog200)) + smallfonts +
xlab("Day") + ylab("Change in prices") +
ggtitle("Google Inc closing stock price")
gridExtra::grid.arrange(p1,p2,p3,p4,ncol=2)
# Chapter 3
autoplot(goog200)
fc1 <- meanf(goog200, h=42)
fc2 <- rwf(goog200, h=42)
fc3 <- rwf(goog200, drift=TRUE, h=42)
autoplot(goog2)
goog242=subset(goog, end = 242)
autoplot(goog242) +
forecast::autolayer(fc$mean, series="Mean")
autoplot(goog242) +
forecast::autolayer(fc1$mean, series="Mean")
goog200
autoplot(goog242) +
forecast::autolayer(fc1$mean, series="Mean") +
forecast::autolayer(fc1$mean, series="Naïve") +
forecast::autolayer(fc1$mean, series="Drift") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
xlab("Day") + ylab("") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog242) +
forecast::autolayer(fc1$mean, series="Mean") +
forecast::autolayer(fc2$mean, series="Naïve") +
forecast::autolayer(fc3$mean, series="Drift") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
xlab("Day") + ylab("") +
guides(colour=guide_legend(title="Forecast"))
goog
attributes(goog)
smallfonts <- theme(text = element_text(size = 9),
axis.text = element_text(size=8))
p1 <- autoplot(hsales) + smallfonts +
xlab("Year") + ylab("millions") +
ggtitle("Sales of new one-family houses, USA")
p2 <- autoplot(ustreas) + smallfonts +
xlab("Day") + ylab("Number") +
ggtitle("US treasury bill contracts")
p3 <- autoplot(qauselec) + smallfonts +
xlab("Year") + ylab("billion kWh") +
ggtitle("Australian quarterly electricity production")
p4 <- autoplot(diff(goog)) + smallfonts +
xlab("Day") + ylab("Change in prices") +
ggtitle("Google Inc closing stock price")
gridExtra::grid.arrange(p1,p2,p3,p4,ncol=2)
goog240=subset(goog, end = 240)
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog2, h=40), PI=FALSE, series="NaÃ¯ve") +
forecast::autolayer(rwf(goog2, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
xlab("Day") + ylab("") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="NaÃ¯ve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
xlab("Day") + ylab("") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
xlab("Day") + ylab("") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock Price (200 days starting 25 Feb 2013)") +
xlab("Day") + ylab("") +
guides(colour=guide_legend(title="Forecast"))
goog200
goog
install.packages("Quandl")
Quandl(c('GOOG/NASDAQ_AAPL', 'GOOG/NASDAQ_MSFT'))
library("Quandl", lib.loc="C:/Program Files/R/R-3.4.3/library")
Quandl(c('GOOG/NASDAQ_AAPL', 'GOOG/NASDAQ_MSFT'))
Quandl('GOOG/NASDAQ_AAPL')
ts(rev(Quandl("GOOG/NASDAQ", type="ts")), end=2011)
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock Price (daily end 6 Dec 2013)") +
xlab("Day") + ylab("") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock Price (daily end 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock Price (daily end 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price USD") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock Price (daily end 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price (US$)") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock (daily end 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price (US$)") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock (daily ending 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price (US$)") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) + xlab("Day") + ylab("") +
ggtitle("Google Stock (daily ending 6 Dec 2013)")
autoplot(goog200) + xlab("Day") + ylab("Closing Price (US$)") +
ggtitle("Google Stock (daily ending 6 Dec 2013)")
res <- residuals(naive(goog200))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock Closing Price (daily ending 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price (US$)") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock (daily ending 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price (US$)") +
guides(colour=guide_legend(title="Forecast"))
res <- residuals(naive(goog200))
autoplot(res) + xlab("Day") + ylab("") +
ggtitle("Residuals from the naïve method")
gghistogram(res) + ggtitle("Histogram of residuals")
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-280)))
res <- residuals(naive(goog1))
autoplot(res) + xlab("Day") + ylab("") +
ggtitle("Residuals from the naïve method")
gghistogram(res) + ggtitle("Histogram of residuals")
res <- residuals(naive(goog200))
gghistogram(res) + ggtitle("Histogram of residuals")
ggAcf(res) + ggtitle("ACF of residuals")
Box.test(res, lag=10, fitdf=0)
Box.test(res,lag=10, fitdf=0, type="Lj")
checkresiduals(naive(goog2))
checkresiduals(naive(goog200))
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-240)))
goog2 <- subset(goog1, end = 200)
res <- residuals(naive(goog1))
autoplot(res) + xlab("Day") + ylab("") +
ggtitle("Residuals from the naïve method")
gghistogram(res) + ggtitle("Histogram of residuals")
res <- residuals(naive(goog200))
autoplot(res) + xlab("Day") + ylab("") +
ggtitle("Residuals from the naïve method")
gghistogram(res) + ggtitle("Histogram of residuals")
res <- residuals(naive(goog1))
autoplot(res) + xlab("Day") + ylab("") +
ggtitle("Residuals from the naïve method")
checkresiduals(naive(goog200))
checkresiduals(naive(goog1))
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-280)))
res <- residuals(naive(goog1))
checkresiduals(naive(goog1))
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-200)))
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-280)))
res <- residuals(naive(goog1))
checkresiduals(naive(goog1))
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-280)))
goog2 <- subset(goog1, end = 240)
goog2
checkresiduals(naive(goog2))
# Should we add goog1 in the fpp2 package as a
# shorter version of goog???
goog1 <- ts(subset(goog,start=(length(goog)-240)))
goog2 <- subset(goog1, end = 200)
checkresiduals(naive(goog2))
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock (daily ending 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price (US$)") +
guides(colour=guide_legend(title="Forecast"))
autoplot(goog200) + xlab("Day") + ylab("Closing Price (US$)") +
ggtitle("Google Stock (daily ending 6 Dec 2013)")
res <- residuals(naive(goog200))
autoplot(goog200) + xlab("Day") + ylab("Closing Price (US$)") +
ggtitle("Google Stock (daily ending 6 Dec 2013)")
res <- residuals(naive(goog200))
autoplot(res) + xlab("Day") + ylab("") +
ggtitle("Residuals from the naïve method")
gghistogram(res) + ggtitle("Histogram of residuals")
ggAcf(res) + ggtitle("ACF of residuals")
Box.test(res, lag=10, fitdf=0)
res
goog240=subset(goog, end = 240)
googfc1 <- meanf(goog200, h=40)
googfc2 <- rwf(goog200, h=40)
googfc3 <- rwf(goog200, drift=TRUE, h=40)
goog240=subset(goog, end = 240)
autoplot(goog240) +
forecast::autolayer(googfc1, PI=FALSE, series="Mean") +
forecast::autolayer(googfc2, PI=FALSE, series="Naïve") +
forecast::autolayer(googfc3, PI=FALSE, series="Drift") +
xlab("Day") + ylab("") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
guides(colour=guide_legend(title="Forecast"))
goog_test <- window(goog, start=200, end=280)
autoplot(subset(goog, end = 240)) +
forecast::autolayer(googfc1, PI=FALSE, series="Mean") +
forecast::autolayer(googfc2, PI=FALSE, series="Naïve") +
forecast::autolayer(googfc3, PI=FALSE, series="Drift") +
xlab("Day") + ylab("") +
ggtitle("Dow Jones Index (daily ending 15 Jul 94)") +
guides(colour=guide_legend(title="Forecast"))
goog_test <- window(goog, start=201, end=280)
accuracy(googfc1, goog3)
goog_test <- window(goog, start=201, end=280)
accuracy(googfc1, goog_test)
accuracy(googfc2, goog_test)
accuracy(googfc3, goog_test)
goog_test <- window(goog, start=201, end=240)
googtest <- window(goog, start=201, end=240)
googtest <- window(goog, start=201, end=240)
accuracy(googfc1, googtest)
accuracy(googfc2, googtest)
accuracy(googfc3, googtest)
e <- tsCV(goog200, rwf, drift=TRUE, h=1)
sqrt(mean(e^2, na.rm=TRUE))
sqrt(mean(residuals(rwf(goog200, drift=TRUE))^2, na.rm=TRUE))
goog200 %>% tsCV(forecastfunction=rwf, drift=TRUE, h=1) -> e
e^2 %>% mean(na.rm=TRUE) %>% sqrt()
goog1 %>% rwf(drift=TRUE) %>% residuals() -> res
goog200 %>% rwf(drift=TRUE) %>% residuals() -> res
res^2 %>% mean(na.rm=TRUE) %>% sqrt()
e <- matrix(NA_real_, nrow = length(goog200), ncol = 8)
e <- matrix(NA_real_, nrow = length(goog200), ncol = 8)
for (h in seq_len(8))
e[, h] <- tsCV(goog200, forecastfunction = naive, h = h)
e <- tsCV(goog, forecastfunction=naive, h=8)
# Compute the MSE values and remove missing values
mse <- colMeans(e^2, na.rm = T)
# Plot the MSE values against the forecast horizon
data.frame(h = 1:8, MSE = mse) %>%
ggplot(aes(x = h, y = MSE)) + geom_point()
naive(goog2)
naive(goog200)
autoplot(naive(goog200))
naive(goog200, bootstrap=TRUE)
pl[[1]] <- autoplot(goog200, main = "(a)", xlab = "Day")
pl <-list()
pl[[1]] <- autoplot(goog200, main = "(a)", xlab = "Day")
pl[[2]] <- autoplot(diff(goog200), main = "(b)", xlab = "Day")
p1 <- ggAcf(goog200)
p2 <- ggAcf(diff(goog200))
gridExtra::grid.arrange(p1,p2, nrow=1)
Box.test(diff(goog200), lag=10, type="Ljung-Box")
pv <- Box.test(diff(goog200), lag=10, type="Ljung-Box")$p.value
p4 <- autoplot(diff(goog200)) + smallfonts +
xlab("Day") + ylab("Change in prices") +
ggtitle("Google Inc closing stock price")
gridExtra::grid.arrange(p1,p2,p3,p4,ncol=2)
autoplot(goog200) +
forecast::autolayer(meanf(goog200, h=40), PI=FALSE, series="Mean") +
forecast::autolayer(rwf(goog200, h=40), PI=FALSE, series="Naïve") +
forecast::autolayer(rwf(goog200, drift=TRUE, h=40), PI=FALSE, series="Drift") +
ggtitle("Google Stock (daily ending 6 Dec 2013)") +
xlab("Day") + ylab("Closing Price (US$)") +
guides(colour=guide_legend(title="Forecast"))
checkresiduals(naive(goog200))
require(fpp2)
seasJap <- ggseasonplot(y[,1], year.labels=TRUE, year.labels.left=TRUE)+ ylab("")+ggtitle("Japan")
data<-as.data.frame(arrivals)
data$X=seq(as.Date("1981-01-31"), by = "quarter", length = nrow(data))
library(reshape2)
df.data <- melt(data,id="X")
ggplot(df.data) + geom_line(aes(x=X, y=value, color=variable))+
facet_wrap( ~ variable, scales="free",ncol=2) +
xlab("Year") + ylab("") + theme(legend.position="none")+
geom_vline(xintercept = 20)+
ggtitle("Total quarterly arrivals to Australia")
# y=arrivals
# autoplot(y, facet=TRUE) +
#   xlab("Year") + ylab("") +
#   ggtitle("Total quarterly arrivals to Australia")
help(gold)
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
frequency(gold)
frequency(woolyrnq)
frequency(gas)
which.max(gold)
autoplot(mytimeseries, facets=TRUE)
retaildata <- readxl::read_excel("retail.xlsx", skip=1)
setwd("C:/George/fppsolutions")
retaildata <- readxl::read_excel("retail.xlsx", skip=1)
setwd("C:/George/fppsolutions")
tute1 <- read.csv("tute1.csv", header=TRUE)
mytimeseries <- ts(tute1[,-1], start=1981, frequency=4)
tute1 <- read.csv("tute1.csv", header=TRUE)
#View(tute1)
mytimeseries <- ts(tute1[,-1], start=1981, frequency=4)
autoplot(mytimeseries, facets=TRUE)
autoplot(mytimeseries, facets=TRUE)
myts
retaildata <- readxl::read_excel("retail.xlsx", skip=1)
autoplot(bicoal)
ggseasonplot(bicoal)
ggsubseriesplot(bicoal)
ggseasonplot(bicoal)
ggsubseriesplot(bicoal)
autoplot(bicoal)
autoplot(chicken)
ggseasonplot(chicken)
ggseasonplot(myts)
autoplot(myts)
myts <- ts(retaildata[,"A3349873A"], frequency=12, start=c(1982,4))
autoplot(myts)
ggseasonplot(myts)
ggsubseriesplot(myts)
gglagplot(myts)
gglagplot(myts)
ggAcf(myts)
autoplot(bicoal)
gglagplot(bicoal)
ggAcf(bicoal)
autoplot(chicken)
ggseasonplot(chicken)
gglagplot(chicken)
ggAcf(chicken)
autoplot(dole)
ggseasonplot(dole)
autoplot(dole)
ggseasonplot(dole)
ggsubseriesplot(dole)
gglagplot(dole)
ggAcf(dole)
autoplot(usdeaths)
ggseasonplot(usdeaths)
ggsubseriesplot(usdeaths)
gglagplot(usdeaths)
ggAcf(usdeaths)
autoplot(bricksq)
ggseasonplot(bricksq)
autoplot(lynx)
ggseasonplot(lynx)
ggsubseriesplot(lynx)
gglagplot(lynx)
ggAcf(lynx)
autoplot(bicoal)
autoplot(chicken)
autoplot(dole)
autoplot(usdeaths)
autoplot(bricksq)
autoplot(lynx)
autoplot(dj)
